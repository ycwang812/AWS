Systems Operations on AWS v1.1


++++ Lab 8: Logging-Linux ++++


This file contains the UserData content that you need to complete the Logging Linux lab.

To use this file:

1. Locate the section you need. Each section in this file matches a section in the lab instructions.

2. Replace items in brackets - [] - with appropriate values. For example, in this command you would replace the value - [JobFlowID] - (including the brackets) with the parameter indicated in the lab instructions: 

   elastic-mapreduce --list [JobFlowID]

3. Do NOT enable the Word Wrap feature in Windows Notepad or the text editor you use to view this file.

==================================================================================================================

Log into logging server and test S3 access

Get a list of s3 buckets 

==================================================================================================================


aws s3 ls


==================================================================================================================

Create a small file in a temporary directory and try uploading it to the bucket

==================================================================================================================

echo "hello" > /tmp/bucketTest.txt


aws s3 cp /tmp/bucketTest.txt s3://[your-bucket-name]/


==================================================================================================================

Create a staging folder for logs

Create a folder called “/var/log/old_syslogs” to be used as the temporary staging area

==================================================================================================================


sudo mkdir /var/log/old_syslogs


==================================================================================================================

Create log archive script

==================================================================================================================

#!/bin/bash
BUCKETNAME="[your-bucket-name]"
OLD_LOGDIR="/var/log/old_syslogs"
region=`(curl http://169.254.169.254/latest/meta-data/placement/availability-zone/ 2>/dev/null \ && echo) | sed 's/[a-z]$//'`

sleep 5
cd $OLD_LOGDIR 
for logFile in *
do
  test -s "$logFile" || echo >> "$logFile"  
  aws s3 mv "$logFile" s3://$BUCKETNAME/ --region $region >/dev/null
done


==================================================================================================================

Copy the script to /usr/local/bin/ and set its permissions to be executable

==================================================================================================================


sudo cp /tmp/archive-syslogs.sh /usr/local/bin/

sudo chmod a+x /usr/local/bin/archive-syslogs.sh

	
==================================================================================================================

Test this script by creating a temporary file in the staging directory and running the script 

==================================================================================================================

sudo touch /var/log/old_syslogs/backup_script_works.txt

sudo /usr/local/bin/archive-syslogs.sh



==================================================================================================================

Refresh the S3 console to confirm that the new file was uploaded, and check the directory to confirm 
that it was subsequently deleted

==================================================================================================================


sudo ls /var/log/old_syslogs/


==================================================================================================================

Modify logrotate to use archive script

==================================================================================================================


/var/log/cron
/var/log/maillog
/var/log/messages
/var/log/secure
/var/log/spooler
{
    sharedscripts
    dateext
    # Set the log format to have the date in it.
    # Although similar, it doesn't have the same functionality as the "date" command
    dateformat -%Y-%m-%d-%s
    # send rotated logs to the old_syslogs folder for S3 backup
    olddir /var/log/old_syslogs
    # After rotating, we fire off the script from the lab
    postrotate
        /bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null
        /usr/local/bin/archive-syslogs.sh 2>>/var/log/syslog-archive-log.txt || true
    endscript
}


==================================================================================================================

Manually trigger a log rotation 

==================================================================================================================


sudo logrotate -f /etc/logrotate.conf


==================================================================================================================

Improve to support compression and key distribution

==================================================================================================================


#!/bin/bash
BUCKETNAME="naton-test-linux-logging"
OLD_LOGDIR="/var/log/old_syslogs"
sleep 5
cd $OLD_LOGDIR
region=`(curl http://169.254.169.254/latest/meta-data/placement/availability-zone/ 2>/dev/null \
&& echo) | sed 's/[a-z]$//'`
for logFile in *
do
    gzip -3 "$logFile"
    prefix="opscourse-class/syslogs/`date +%Y/%m/%d/%H/%M`"
  aws s3 mv "${logFile}.gz" s3://$BUCKETNAME/$prefix/ --region $region >/dev/null
done


==================================================================================================================

Force a log rotation one more time

==================================================================================================================


sudo logrotate -f /etc/logrotate.conf 


==================================================================================================================

Bonus Activity

==================================================================================================================


#!/bin/bash
prog="forceLogRotate"
lockfile=/var/lock/subsys/$prog
if [ "$1" == 'start' ]; then
  touch $lockfile
elif [ "$1" == 'stop' ]; then
  /usr/sbin/logrotate -f /etc/logrotate.conf
fi


==================================================================================================================

Change the script to be executable

==================================================================================================================


chmod a+x /home/ec2-user/forceLogRotation.sh


==================================================================================================================

create symbolic links to register forceLogRotation.sh for appropriate startup and shutdown runlevels

==================================================================================================================


sudo ln -s /home/ec2-user/forceLogRotation.sh /etc/rc0.d/K60forceLogRotate
sudo ln -s /home/ec2-user/forceLogRotation.sh /etc/rc6.d/K60forceLogRotate
sudo ln -s /home/ec2-user/forceLogRotation.sh /etc/rc2.d/S60forceLogRotate
sudo ln -s /home/ec2-user/forceLogRotation.sh /etc/rc3.d/S60forceLogRotate
sudo ln -s /home/ec2-user/forceLogRotation.sh /etc/rc4.d/S60forceLogRotate
sudo ln -s /home/ec2-user/forceLogRotation.sh /etc/rc5.d/S60forceLogRotate


==================================================================================================================

Appendix A: Connecting to the Bastion and Beyond

Connecting to the EC2 Instance Using the OpenSSH CLI Client

==================================================================================================================

Change the path and file name to the location of the .pem file you downloaded

==================================================================================================================


chmod 600 ~/Downloads/qwiklab-l33-5018.pem


==================================================================================================================

Connect to the host (replacing [HostName] with the information you copied from the Public DNS field

==================================================================================================================


ssh –i ~/Downloads/qwiklab-l33-5018.pem ec2-user@[HostName]


==================================================================================================================

Connect to a Linux Instance from a Linux Bastion Host (Linux)

==================================================================================================================


chmod 600 ~/awsstudent.id.rsa
ssh –i ~/awsstudent.id.rsa ec2-user@(IP ADDRESS OF REMOTE HOST)


==================================================================================================================


© 2013 Amazon Web Services, Inc. or its affiliates. All rights reserved.
