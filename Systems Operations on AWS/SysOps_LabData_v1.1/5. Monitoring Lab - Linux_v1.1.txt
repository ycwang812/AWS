Systems Operations on AWS v1.1

 
++++  Lab 5: Monitoring - Linux ++++


This file contains the UserData content that you need to complete the Monitoring Linux lab.

To use this file:

1. Locate the section you need. Each section in this file matches a section in the lab instructions.

2. Replace items in brackets - [] - with appropriate values. For example, in this command you would replace the value - [JobFlowID] - (including the brackets) with the parameter indicated in the lab instructions: 

   elastic-mapreduce --list [JobFlowID]

3. Do NOT enable the Word Wrap feature in Windows Notepad or the text editor you use to view this file.
 

=====================================================================================================================
=====================================================================================================================

Interacting with Amazon CloudWatch

=====================================================================================================================
=====================================================================================================================

Confirm you AWS Region

Write the new metric data

=====================================================================================================================
export AWS_DEFAULT_REGION=<your-aws-region-id>
#e.g.: export AWS_DEFAULT_REGION=sa-east-1
=====================================================================================================================

Send a new metric data to CloudWatch, with any meaning.

=====================================================================================================================

aws cloudwatch put-metric-data \
  --namespace Student \
  --metric-name AttentionLevel \
  --value 8 \
  --debug

=====================================================================================================================

Get the minimum attention level statistics from the shell using the CLI:

=====================================================================================================================
aws cloudwatch get-metric-statistics \
 --metric-name "AttentionLevel" \
 --namespace="Student" \
 --start-time=$(date -d yesterday -I) \
 --end-time=$(date -d tomorrow -I) \
 --period=300 \
 --statistics="Minimum"
=====================================================================================================================

Alarms and Notifications

Generate a data point that triggers the alarm

=====================================================================================================================
aws cloudwatch put-metric-data \
  --namespace Student \
  --metric-name AttentionLevel \
  --value 4 \
  --debug
=====================================================================================================================
=====================================================================================================================

Integrating with Monitoring Services 

=====================================================================================================================
=====================================================================================================================

Install and start the mock monitoring service

=====================================================================================================================
sudo -s
easy_install pip
pip install setuptools --no-use-wheel --upgrade
pip install Flask
mkdir /opt/awstc/
wget -O /opt/awstc/mon-server.py \
  https://us-east-1-aws-training.s3.amazonaws.com/sys-ops-lab-vpc-monitoring-linux-v1.1/static/mon-server.py
python /opt/awstc/mon-server.py > mon-server.log 2>&1 &
=====================================================================================================================

Issue an HTTP GET request to your server using ints Private IP (including the "http://").

=====================================================================================================================
curl <monitoring_server_url>
#e.g.: curl http://54.207.44.72
=====================================================================================================================

Open the Advanced Details and paste the follihng User data script.

=====================================================================================================================
#!/bin/bash
curl -X PUT \
  -d instanceId=$(curl -s http://169.254.169.254/latest/meta-data/instance-id) \
  <monitoring_server_url>

#e.g.:
#!/bin/bash
#curl -X PUT \
# -d instanceId=$(curl -s http://169.254.169.254/latest/meta-data/instance-id) \
# http://172.31.23.129
=====================================================================================================================

In your SSH terminal session, list the registered instances with a new http GET request:

=====================================================================================================================
curl <monitoring_server_url>

#e.g.: curl http://54.207.44.72
=====================================================================================================================

Schedule the scan /config rewrite script

Download the instance polling script and make it executable:

=====================================================================================================================
wget -O /opt/awstc/poll-instances.sh \
  https://us-east-1-aws-training.s3.amazonaws.com/sys-ops-lab-vpc-monitoring-linux-v1.1/static/poll-instances.sh
chmod +x /opt/awstc/poll-instances.sh
=====================================================================================================================

Schedule the script to run every two minutes. Replace <monitoring_server_url> with the address of your monitoring server, including "http://"

=====================================================================================================================
echo "*/5 * * * * /opt/awstc/poll-instances.sh <monitoring_server_url>" | crontab -

#e.g.: echo "*/5 * * * * /opt/awstc/poll-instances.sh http://172.31.23.129" | crontab -
=====================================================================================================================

Consume Auto Scaling Event Messages

Download the script that consumes event messages from SQS and make it executable

=====================================================================================================================
wget -O /opt/awstc/consume-events.sh \
  https://us-east-1-aws-training.s3.amazonaws.com/sys-ops-lab-vpc-monitoring-linux-v1.1/static/consume-events.sh
chmod +x /opt/awstc/consume-events.sh
=====================================================================================================================

Inspect and run the script

=====================================================================================================================
/opt/awstc/consume-events.sh <queue_url> <monitoring_server_url>

#e.g.: /opt/awstc/consume-events.sh https://sqs.sa-east-1.amazonaws.com/769662751619/autoScalingEventsQueue http://172.31.23.129

=====================================================================================================================

© 2013, 2014 Amazon Web Services, Inc. or its affiliates. All rights reserved.