Systems Operations on AWS v1.1


++++ Lab 8: Logging-Windows ++++


This file contains the UserData content that you need to complete the Logging Windows lab.

To use this file:

1. Locate the section you need. Each section in this file matches a section in the lab instructions.

2. Replace items in brackets - [] - with appropriate values. For example, in this command you would replace the value - [JobFlowID] - (including the brackets) with the parameter indicated in the lab instructions: 

   elastic-mapreduce --list [JobFlowID]

3. Do NOT enable the Word Wrap feature in Windows Notepad or the text editor you use to view this file.

==================================================================================================================

Log into logging server and test S3 access

Get a list of s3 buckets 

==================================================================================================================


aws s3 ls


==================================================================================================================

Create a small file in a temporary directory and try uploading it to the bucket

==================================================================================================================

echo "hello" > C:\aws\bucketTest.txt 


aws s3 cp C:\aws\bucketTest.txt s3:// [your-bucket-name]/


==================================================================================================================

Enable script execution on the system - Enter the following in the PowerShell window and confirm the 
change when prompted

==================================================================================================================


Set-ExecutionPolicy RemoteSigned


==================================================================================================================

Create log archive script

==================================================================================================================


<# 
.SYNOPSIS 
    Archives files to S3 optionally using a regex file pattern
.DESCRIPTION 
    If a pattern with is provided, only matching files are archived, otherwise
    everything in a folder is uploaded
.NOTES 
    Author : awsstudent
#>

[CmdletBinding()]
Param(
    [Parameter(Mandatory=$false)][ValidateScript({Test-Path $_ -PathType 'Container'})][string] 
    $Path = "Z:\application_logs",
    [Parameter(Mandatory=$false)][string]
    $Bucket = "[your-bucket-name]",
    [Parameter(Mandatory=$false)][string]
    $Pattern = ".*"
    )

Get-ChildItem $Path | 
    Where-Object { $_.Name -match $Pattern -and ! $_.PSIsContainer -and $_.Length -gt 0 } |
    Select-Object Name, FullName | ForEach-Object {
        aws s3 cp $_.FullName "s3://$Bucket/$($_.Name)"
        Remove-Item -Path $_.FullName
    }

	
==================================================================================================================

Test the log data

==================================================================================================================


C:\aws\archive-syslogs.ps1

	
==================================================================================================================

Improve to support compression and key distribution

==================================================================================================================


<# 
.SYNOPSIS 
    Archives files to S3 in a zip file optionally using a regex file pattern
.DESCRIPTION 
    If a pattern with is provided, only matching files are archived, otherwise
    everything in a folder is zipped and uploaded
.NOTES 
    Author : awsstudent
#>

[CmdletBinding()]
Param(
    [Parameter(Mandatory=$false)][ValidateScript({Test-Path $_ -PathType 'Container'})][string] 
    $Path = "Z:\application_logs",
    [Parameter(Mandatory=$false)][string]
    $Bucket = "[your-bucket-name]",
    [Parameter(Mandatory=$false)][string]
    $Pattern = ".*"
    )

$logs = Get-ChildItem $Path | Where-Object { $_.Name -match $Pattern -and ! $_.PSIsContainer -and $_.Length -gt 0 } |
    Select-Object Name, FullName

if (!($logs | Measure-Object).Count) { Write-Warning "no files at $Path" -WarningAction Stop}

$archive = (Join-Path (Resolve-Path $Path) "logs.zip")
Set-Content $archive ("PK" + [char]5 + [char]6 + ("$([char]0)" * 18))
$ns = (New-Object -com shell.application).NameSpace($archive);

$logs | ForEach-Object { $ns.MoveHere($_.FullName); sleep 1 }

aws s3 cp $archive "s3://$Bucket/$(Get-Date -UFormat "%Y/%m/%d/%H/%M")/logs.zip"
Remove-Item $archive


==================================================================================================================

Appendix A: Connecting to the Bastion and Beyond

==================================================================================================================

Connect to a Windows Instance from a Windows Bastion Instance

==================================================================================================================


aws ec2 get-password-data --instance-id [YourInstanceID] --priv-launch-key C:\Users\Administrator\awsstudent.id.rsa


==================================================================================================================

Copy the value for PasswordData from the command output

==================================================================================================================


{
    "InstanceId": "i-instanceID",
    "Timestamp": "YY-MM-DDTHH:MM:SS.FFFZ",
    "PasswordData": "*********"
}


==================================================================================================================

© 2013 Amazon Web Services, Inc. or its affiliates. All rights reserved.